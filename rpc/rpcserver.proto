syntax = "proto3";

package rpc;

option go_package = "/proto";

service ScheduleService {
    rpc addProvider (Provider) returns (UUID);
    rpc selectProvider (UUID) returns (Provider);
    rpc switchProvider (UUID) returns (Provider);
    rpc getFreeProvider (empty) returns (Provider);
    rpc showProviders (empty) returns (Providers);
}

service PlotService {
    rpc Plot (Task) returns (stream StreamResponse);
}

service NodeService {
    rpc showTasks (empty) returns (Tasks);
}

message StreamRequest {}

message StreamResponse {
    bytes  output          = 1;
    uint64 nonce           = 2;
    uint64 startPosition   = 3;
    // uint64 fileOffset      = 4;
    // uint64 currentPosition = 5;
}

message Task {
    bytes    id               = 1;
    bytes    commitmentAtxId  = 2;
    uint32   numUnits         = 3;
    int64    index            = 4;
    Provider provider         = 5;
    string   status           = 6;
}

message Tasks {
    repeated Task tasks = 1;
}

message Data {
    bytes  output          = 1;
    uint64 nonce           = 2;
    uint64 startPosition   = 3;
    // uint64 fileOffset      = 4;
    // uint64 currentPosition = 5;
}

message Provider {
    uint32   ID          = 1;
    string   Model       = 2;
    string   UUID        = 3;
	string   Host        = 4;
	string   Port        = 5;
	bool     inUse       = 6;
}

message Providers {
    repeated Provider Provider = 1;
}

message UUID {
    string UUID = 1;
}

message empty {}