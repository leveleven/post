// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: rpc/plotserver.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CommitmentAtxId []byte `protobuf:"bytes,2,opt,name=commitmentAtxId,proto3" json:"commitmentAtxId,omitempty"`
	NumUnits        uint32 `protobuf:"varint,3,opt,name=numUnits,proto3" json:"numUnits,omitempty"`
	Index           int64  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_plotserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_plotserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_rpc_plotserver_proto_rawDescGZIP(), []int{0}
}

func (x *StreamRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StreamRequest) GetCommitmentAtxId() []byte {
	if x != nil {
		return x.CommitmentAtxId
	}
	return nil
}

func (x *StreamRequest) GetNumUnits() uint32 {
	if x != nil {
		return x.NumUnits
	}
	return 0
}

func (x *StreamRequest) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type StreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output        []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Nonce         uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	StartPosition uint64 `protobuf:"varint,3,opt,name=startPosition,proto3" json:"startPosition,omitempty"`
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_plotserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_plotserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_rpc_plotserver_proto_rawDescGZIP(), []int{1}
}

func (x *StreamResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *StreamResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *StreamResponse) GetStartPosition() uint64 {
	if x != nil {
		return x.StartPosition
	}
	return 0
}

var File_rpc_plotserver_proto protoreflect.FileDescriptor

var file_rpc_plotserver_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6c, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x22, 0x7b, 0x0a, 0x0d, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x78, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x64, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x42,
	0x0a, 0x0b, 0x50, 0x6c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a,
	0x04, 0x50, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_plotserver_proto_rawDescOnce sync.Once
	file_rpc_plotserver_proto_rawDescData = file_rpc_plotserver_proto_rawDesc
)

func file_rpc_plotserver_proto_rawDescGZIP() []byte {
	file_rpc_plotserver_proto_rawDescOnce.Do(func() {
		file_rpc_plotserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_plotserver_proto_rawDescData)
	})
	return file_rpc_plotserver_proto_rawDescData
}

var file_rpc_plotserver_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_plotserver_proto_goTypes = []interface{}{
	(*StreamRequest)(nil),  // 0: rpc.StreamRequest
	(*StreamResponse)(nil), // 1: rpc.StreamResponse
}
var file_rpc_plotserver_proto_depIdxs = []int32{
	0, // 0: rpc.PlotService.Plot:input_type -> rpc.StreamRequest
	1, // 1: rpc.PlotService.Plot:output_type -> rpc.StreamResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_plotserver_proto_init() }
func file_rpc_plotserver_proto_init() {
	if File_rpc_plotserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_plotserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_plotserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_plotserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_plotserver_proto_goTypes,
		DependencyIndexes: file_rpc_plotserver_proto_depIdxs,
		MessageInfos:      file_rpc_plotserver_proto_msgTypes,
	}.Build()
	File_rpc_plotserver_proto = out.File
	file_rpc_plotserver_proto_rawDesc = nil
	file_rpc_plotserver_proto_goTypes = nil
	file_rpc_plotserver_proto_depIdxs = nil
}
